<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gorma on goa</title>
    <link>http://goa.design/tags/gorma/</link>
    <description>Recent content in Gorma on goa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://goa.design/tags/gorma/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>gorma</title>
      <link>http://goa.design/godoc/gorma/</link>
      <pubDate>Sun, 31 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://goa.design/godoc/gorma/</guid>
      <description>

&lt;h1 id=&#34;gorma:14f3f094777b2d9e0fb6873db713d919&#34;&gt;gorma&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;import &amp;quot;github.com/goadesign/gorma&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Package gorma is a plugin generator for Goa (&lt;a href=&#34;http://goa.design&#34;&gt;http://goa.design&lt;/a&gt;).
See the documentation in the &lt;code&gt;dsl&lt;/code&gt; package for details
on how to create a definition for your API.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;example&lt;/code&gt; folder contains an example Goa design package.
The &lt;code&gt;models.go&lt;/code&gt; file is the Gorma definition, which is responsible
for generating all the files in the &lt;code&gt;example\genmodels&lt;/code&gt; folder.&lt;/p&gt;

&lt;h2 id=&#34;constants:14f3f094777b2d9e0fb6873db713d919&#34;&gt;Constants&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;const (
    // Gorma is the constant string used as the index in the
    // goa DesignConstructs map
    Gorma = &amp;quot;gorma&amp;quot;
    // StorageGroup is the constant string used as the index in the
    // GormaConstructs map
    StorageGroup = &amp;quot;storagegroup&amp;quot;
    // MySQL is the StorageType for MySQL databases
    MySQL RelationalStorageType = &amp;quot;mysql&amp;quot;
    // Postgres is the StorageType for Postgres
    Postgres RelationalStorageType = &amp;quot;postgres&amp;quot;
    // Boolean is a bool field type
    Boolean FieldType = &amp;quot;bool&amp;quot;
    // Integer is an integer field type
    Integer FieldType = &amp;quot;integer&amp;quot;
    // BigInteger is a large integer field type
    BigInteger FieldType = &amp;quot;biginteger&amp;quot;
    // AutoInteger is not implemented
    AutoInteger FieldType = &amp;quot;auto_integer&amp;quot;
    // AutoBigInteger is not implemented
    AutoBigInteger FieldType = &amp;quot;auto_biginteger&amp;quot;
    // Decimal is a float field type
    Decimal FieldType = &amp;quot;decimal&amp;quot;
    // BigDecimal is a large float field type
    BigDecimal FieldType = &amp;quot;bigdecimal&amp;quot;
    // String is a varchar field type
    String FieldType = &amp;quot;string&amp;quot;
    // Text is a large string field type
    Text FieldType = &amp;quot;text&amp;quot;
    // UUID is not implemented yet
    UUID FieldType = &amp;quot;uuid&amp;quot;
    // PKInteger is a field that will serve as the primary key
    // and store as an integer
    PKInteger FieldType = &amp;quot;pkinteger&amp;quot;
    // PKBigInteger is a field that will serve as the primary key
    // and store as a large integer
    PKBigInteger FieldType = &amp;quot;pkbiginteger&amp;quot;
    // PKUUID is not implemented yet
    PKUUID FieldType = &amp;quot;pkuuid&amp;quot;
    // Timestamp is a date/time field in the database
    Timestamp FieldType = &amp;quot;timestamp&amp;quot;
    // NullableTimestamp is a timestamp that may not be
    // populated.  Fields with no value will be null in the database
    NullableTimestamp FieldType = &amp;quot;nulltimestamp&amp;quot;
    // NotFound is used internally
    NotFound FieldType = &amp;quot;notfound&amp;quot;
    // HasOne is used internally
    HasOne FieldType = &amp;quot;hasone&amp;quot;
    // HasOneKey is used internally
    HasOneKey FieldType = &amp;quot;hasonekey&amp;quot;
    // HasMany is used internally
    HasMany FieldType = &amp;quot;hasmany&amp;quot;
    // HasManyKey is used internally
    HasManyKey FieldType = &amp;quot;hasmanykey&amp;quot;
    // BelongsTo is used internally
    BelongsTo FieldType = &amp;quot;belongsto&amp;quot;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;variables:14f3f094777b2d9e0fb6873db713d919&#34;&gt;Variables&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var (
    // TargetPackage is the name of the generated Go package.
    TargetPackage string
    // AppPackage is the name of the goa-generated Go app package.
    AppPackage string
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;func-appoutputdir:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func AppOutputDir&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func AppOutputDir() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AppOutputDir returns the directory containing the generated files.&lt;/p&gt;

&lt;h2 id=&#34;func-apppackagepath:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func AppPackagePath&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func AppPackagePath() (string, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AppPackagePath returns the Go package path to the generated package.&lt;/p&gt;

&lt;h2 id=&#34;func-generate:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func Generate&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func Generate(api *design.APIDefinition) ([]string, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate is the generator entry point called by the meta generator.&lt;/p&gt;

&lt;h2 id=&#34;func-init:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func Init&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func Init()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Init creates the necessary data structures for parsing a DSL&lt;/p&gt;

&lt;h2 id=&#34;func-modeloutputdir:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func ModelOutputDir&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func ModelOutputDir() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ModelOutputDir returns the directory containing the generated files.&lt;/p&gt;

&lt;h2 id=&#34;func-modelpackagepath:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func ModelPackagePath&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func ModelPackagePath() (string, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ModelPackagePath returns the Go package path to the generated package.&lt;/p&gt;

&lt;h2 id=&#34;type-command:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type Command&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Command struct {
    *codegen.BaseCommand
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Command is the goa application code generator command line data structure.&lt;/p&gt;

&lt;h3 id=&#34;func-newcommand:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func NewCommand&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func NewCommand() *Command
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NewCommand instantiates a new command.&lt;/p&gt;

&lt;h3 id=&#34;func-command-registerflags:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*Command) RegisterFlags&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Command) RegisterFlags(r codegen.FlagRegistry)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RegisterFlags registers the command line flags with the given registry.&lt;/p&gt;

&lt;h3 id=&#34;func-command-run:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*Command) Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Command) Run() ([]string, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run simply calls the meta generator.&lt;/p&gt;

&lt;h2 id=&#34;type-fielditerator:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type FieldIterator&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type FieldIterator func(m *RelationalFieldDefinition) error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;FieldIterator is a function that iterates over Fields
in a RelationalModel&lt;/p&gt;

&lt;h2 id=&#34;type-fieldtype:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type FieldType&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type FieldType string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;FieldType is the storage data type for a database field&lt;/p&gt;

&lt;h2 id=&#34;type-generator:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type Generator&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Generator struct {
    // contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generator is the application code generator.&lt;/p&gt;

&lt;h3 id=&#34;func-newgenerator:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func NewGenerator&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func NewGenerator() (*Generator, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NewGenerator returns the application code generator.&lt;/p&gt;

&lt;h3 id=&#34;func-generator-cleanup:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*Generator) Cleanup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (g *Generator) Cleanup()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cleanup removes the entire &amp;ldquo;app&amp;rdquo; directory if it was created by this generator.&lt;/p&gt;

&lt;h3 id=&#34;func-generator-generate:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*Generator) Generate&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (g *Generator) Generate(api *design.APIDefinition) (_ []string, err error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the application code, implement codegen.Generator.&lt;/p&gt;

&lt;h2 id=&#34;type-manytomanydefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type ManyToManyDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type ManyToManyDefinition struct {
    design.Definition
    DefinitionDSL    func()
    Left             *RelationalModelDefinition
    Right            *RelationalModelDefinition
    RelationshipName string // ??
    DatabaseField    string
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ManyToManyDefinition stores information about a ManyToMany
relationship between two domain objects&lt;/p&gt;

&lt;h3 id=&#34;func-manytomanydefinition-leftname:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*ManyToManyDefinition) LeftName&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (m *ManyToManyDefinition) LeftName() string
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;func-manytomanydefinition-leftnameplural:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*ManyToManyDefinition) LeftNamePlural&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (m *ManyToManyDefinition) LeftNamePlural() string
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;func-manytomanydefinition-lowerleftname:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*ManyToManyDefinition) LowerLeftName&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (m *ManyToManyDefinition) LowerLeftName() string
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;func-manytomanydefinition-lowerrightname:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*ManyToManyDefinition) LowerRightName&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (m *ManyToManyDefinition) LowerRightName() string
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;func-manytomanydefinition-rightname:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*ManyToManyDefinition) RightName&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (m *ManyToManyDefinition) RightName() string
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;func-manytomanydefinition-rightnameplural:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*ManyToManyDefinition) RightNamePlural&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (m *ManyToManyDefinition) RightNamePlural() string
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;type-mediatypeadapterdefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type MediaTypeAdapterDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type MediaTypeAdapterDefinition struct {
    design.Definition
    DefinitionDSL func()
    Name          string
    Description   string
    Left          *design.MediaTypeDefinition
    Right         *RelationalModelDefinition
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MediaTypeAdapterDefinition represents the transformation of a
Goa media type into a Gorma Model
Unimplemented at this time&lt;/p&gt;

&lt;h2 id=&#34;type-modeliterator:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type ModelIterator&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type ModelIterator func(m *RelationalModelDefinition) error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ModelIterator is a function that iterates over Models in a
RelationalStore&lt;/p&gt;

&lt;h2 id=&#34;type-payloadadapterdefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type PayloadAdapterDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type PayloadAdapterDefinition struct {
    design.Definition
    DefinitionDSL func()
    Name          string
    Description   string
    Left          *design.UserTypeDefinition
    Right         *RelationalModelDefinition
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PayloadAdapterDefinition represents the transformation of a Goa
Payload (which is really a UserTypeDefinition
into a Gorma model
Unimplemented at this time&lt;/p&gt;

&lt;h2 id=&#34;type-relationalfielddefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type RelationalFieldDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type RelationalFieldDefinition struct {
    design.Definition
    DefinitionDSL func()
    Parent        *RelationalModelDefinition

    Name              string
    BuiltFrom         string
    RenderTo          string
    Datatype          FieldType
    SQLTag            string
    DatabaseFieldName string
    Description       string
    Nullable          bool
    PrimaryKey        bool
    Timestamp         bool
    Size              int    // string field size
    Alias             string // gorm:column
    BelongsTo         string
    HasOne            string
    HasMany           string
    Many2Many         string
    // contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RelationalFieldDefinition represents
a field in a relational database&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-children:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (RelationalFieldDefinition) Children&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f RelationalFieldDefinition) Children() []design.Definition
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Children returnsa slice of this objects children&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-context:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalFieldDefinition) Context&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalFieldDefinition) Context() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Context returns the generic definition name used in error messages.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-dsl:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalFieldDefinition) DSL&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalFieldDefinition) DSL() func()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DSL returns this object&amp;rsquo;s DSL&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-fielddefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalFieldDefinition) FieldDefinition&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalFieldDefinition) FieldDefinition() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;FieldDefinition returns the field&amp;rsquo;s struct definition&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-lowername:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalFieldDefinition) LowerName&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalFieldDefinition) LowerName() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;LowerName returns the field name as a lowercase string.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-tags:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalFieldDefinition) Tags&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalFieldDefinition) Tags() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tags returns the sql and gorm struct tags for the Definition&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-underscore:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalFieldDefinition) Underscore&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalFieldDefinition) Underscore() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Underscore returns the field name as a lowercase string in snake case&lt;/p&gt;

&lt;h3 id=&#34;func-relationalfielddefinition-validate:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalFieldDefinition) Validate&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (field *RelationalFieldDefinition) Validate() *design.ValidationErrors
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate tests whether the RelationalField definition is consistent.&lt;/p&gt;

&lt;h2 id=&#34;type-relationalmodeldefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type RelationalModelDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type RelationalModelDefinition struct {
    design.Definition
    DefinitionDSL    func()
    Name             string
    Description      string //
    Parent           *RelationalStoreDefinition
    BuiltFrom        []*design.UserTypeDefinition
    RenderTo         *design.MediaTypeDefinition
    BelongsTo        map[string]*RelationalModelDefinition
    HasMany          map[string]*RelationalModelDefinition
    HasOne           map[string]*RelationalModelDefinition
    ManyToMany       map[string]*ManyToManyDefinition
    Adapters         map[string]func()
    Alias            string // gorm:tablename
    Cached           bool
    CacheDuration    int
    Roler            bool
    DynamicTableName bool
    SQLTag           string
    RelationalFields map[string]*RelationalFieldDefinition
    PrimaryKeys      []*RelationalFieldDefinition
    // contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RelationalModelDefinition implements the storage of a domain model into a
table in a relational database&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-children:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (RelationalModelDefinition) Children&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f RelationalModelDefinition) Children() []design.Definition
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Children returns a slice of this objects children.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-context:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) Context&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) Context() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Context returns the generic definition name used in error messages.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-dsl:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) DSL&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) DSL() func()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DSL returns this object&amp;rsquo;s DSL.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-iteratefields:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) IterateFields&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) IterateFields(it FieldIterator) error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IterateFields returns an iterator function useful for iterating through
this model&amp;rsquo;s field list.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-lowername:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) LowerName&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) LowerName() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;LowerName returns the model name as a lowercase string.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-pkattributes:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) PKAttributes&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) PKAttributes() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PKAttributes constructs a pair of field + definition strings
useful for method parameters.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-pkupdatefields:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) PKUpdateFields&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) PKUpdateFields(modelname string) string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PKUpdateFields returns something?  This function doesn&amp;rsquo;t look useful in
current form.  Perhaps it isn&amp;rsquo;t.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-pkwhere:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) PKWhere&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) PKWhere() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PKWhere returns an array of strings representing the where clause
of a retrieval by primary key(s) &amp;ndash; x = ? and y = ?.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-pkwherefields:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) PKWhereFields&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) PKWhereFields() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PKWhereFields returns the fields for a where clause for the primary
keys of a model.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-populatefrommodeledtype:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) PopulateFromModeledType&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) PopulateFromModeledType()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PopulateFromModeledType creates fields for the model
based on the goa UserTypeDefinition it models.
This happens before fields are processed, so it&amp;rsquo;s
ok to just assign without testing.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-structdefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) StructDefinition&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f *RelationalModelDefinition) StructDefinition() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;StructDefinition returns the struct definition for the model.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-tablename:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (RelationalModelDefinition) TableName&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (f RelationalModelDefinition) TableName() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TableName returns the table name for this model&lt;/p&gt;

&lt;h3 id=&#34;func-relationalmodeldefinition-validate:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalModelDefinition) Validate&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (a *RelationalModelDefinition) Validate() *design.ValidationErrors
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate tests whether the RelationalModel definition is consistent.&lt;/p&gt;

&lt;h2 id=&#34;type-relationalstoragetype:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type RelationalStorageType&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type RelationalStorageType string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RelationalStorageType is the type of database&lt;/p&gt;

&lt;h2 id=&#34;type-relationalstoredefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type RelationalStoreDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type RelationalStoreDefinition struct {
    design.Definition
    DefinitionDSL    func()
    Name             string
    Description      string
    Parent           *StorageGroupDefinition
    Type             RelationalStorageType
    RelationalModels map[string]*RelationalModelDefinition
    NoAutoIDFields   bool
    NoAutoTimestamps bool
    NoAutoSoftDelete bool
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RelationalStoreDefinition is the parent configuration structure for Gorm relational model definitions&lt;/p&gt;

&lt;h3 id=&#34;func-relationalstoredefinition-children:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (RelationalStoreDefinition) Children&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd RelationalStoreDefinition) Children() []design.Definition
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Children returns a slice of this objects children.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalstoredefinition-context:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalStoreDefinition) Context&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd *RelationalStoreDefinition) Context() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Context returns the generic definition name used in error messages.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalstoredefinition-dsl:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalStoreDefinition) DSL&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd *RelationalStoreDefinition) DSL() func()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DSL returns this object&amp;rsquo;s DSL.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalstoredefinition-iteratemodels:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalStoreDefinition) IterateModels&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd *RelationalStoreDefinition) IterateModels(it ModelIterator) error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IterateModels runs an iterator function once per Model in the Store&amp;rsquo;s model list.&lt;/p&gt;

&lt;h3 id=&#34;func-relationalstoredefinition-validate:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*RelationalStoreDefinition) Validate&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (a *RelationalStoreDefinition) Validate() *design.ValidationErrors
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate tests whether the RelationalStore definition is consistent.&lt;/p&gt;

&lt;h2 id=&#34;type-storagegroupdefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type StorageGroupDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type StorageGroupDefinition struct {
    design.Definition
    DefinitionDSL    func()
    Name             string
    Description      string
    RelationalStores map[string]*RelationalStoreDefinition
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;StorageGroupDefinition is the parent configuration structure for Gorma definitions&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var GormaDesign *StorageGroupDefinition
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;GormaDesign is the root definition for Gorma&lt;/p&gt;

&lt;h3 id=&#34;func-storagegroupdefinition-children:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (StorageGroupDefinition) Children&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd StorageGroupDefinition) Children() []design.Definition
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Children returns a slice of this objects children.&lt;/p&gt;

&lt;h3 id=&#34;func-storagegroupdefinition-context:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (StorageGroupDefinition) Context&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd StorageGroupDefinition) Context() string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Context returns the generic definition name used in error messages.&lt;/p&gt;

&lt;h3 id=&#34;func-storagegroupdefinition-dsl:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (StorageGroupDefinition) DSL&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd StorageGroupDefinition) DSL() func()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DSL returns this object&amp;rsquo;s DSL.&lt;/p&gt;

&lt;h3 id=&#34;func-storagegroupdefinition-iteratesets:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*StorageGroupDefinition) IterateSets&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd *StorageGroupDefinition) IterateSets(iterator design.SetIterator)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IterateSets goes over all the definition sets of the StorageGroup: the
StorageGroup definition itself, each store definition, models and fields.&lt;/p&gt;

&lt;h3 id=&#34;func-storagegroupdefinition-iteratestores:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*StorageGroupDefinition) IterateStores&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (sd *StorageGroupDefinition) IterateStores(it StoreIterator) error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IterateStores runs an iterator function once per Relational Store in the
StorageGroup&amp;rsquo;s Store list.&lt;/p&gt;

&lt;h3 id=&#34;func-storagegroupdefinition-validate:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*StorageGroupDefinition) Validate&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (a *StorageGroupDefinition) Validate() *design.ValidationErrors
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate tests whether the StorageGroup definition is consistent.&lt;/p&gt;

&lt;h2 id=&#34;type-storeiterator:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type StoreIterator&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type StoreIterator func(m *RelationalStoreDefinition) error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;StoreIterator is a function that iterates over Relational Stores in a
StorageGroup&lt;/p&gt;

&lt;h2 id=&#34;type-usertypeadapterdefinition:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type UserTypeAdapterDefinition&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type UserTypeAdapterDefinition struct {
    design.Definition
    DefinitionDSL func()
    Name          string
    Description   string
    Left          *RelationalModelDefinition
    Right         *RelationalModelDefinition
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UserTypeAdapterDefinition represents the transformation of a Goa
user type into a Gorma Model
Unimplemented at this time&lt;/p&gt;

&lt;h2 id=&#34;type-usertypetemplatedata:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type UserTypeTemplateData&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type UserTypeTemplateData struct {
    APIDefinition *design.APIDefinition
    UserType      *RelationalModelDefinition
    DefaultPkg    string
    AppPkg        string
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UserTypeTemplateData contains all the information used by the template to redner the
media types code.&lt;/p&gt;

&lt;h2 id=&#34;type-usertypeswriter:14f3f094777b2d9e0fb6873db713d919&#34;&gt;type UserTypesWriter&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type UserTypesWriter struct {
    *codegen.SourceFile
    UserTypeTmpl *template.Template
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UserTypesWriter generate code for a goa application user types.
User types are data structures defined in the DSL with &amp;ldquo;Type&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;func-newusertypeswriter:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func NewUserTypesWriter&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func NewUserTypesWriter(filename string) (*UserTypesWriter, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NewUserTypesWriter returns a contexts code writer.
User types contain custom data structured defined in the DSL with &amp;ldquo;Type&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;func-usertypeswriter-execute:14f3f094777b2d9e0fb6873db713d919&#34;&gt;func (*UserTypesWriter) Execute&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (w *UserTypesWriter) Execute(data *UserTypeTemplateData) error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Execute writes the code for the context types to the writer.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Generated by &lt;a href=&#34;http://godoc.org/github.com/davecheney/godoc2md&#34;&gt;godoc2md&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>