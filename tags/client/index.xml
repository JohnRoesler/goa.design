<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Client on goa</title>
    <link>http://goa.design/tags/client/</link>
    <description>Recent content in Client on goa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://goa.design/tags/client/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>gorma/example/client</title>
      <link>http://goa.design/godoc/gorma/example/client/client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://goa.design/godoc/gorma/example/client/client/</guid>
      <description>

&lt;h1 id=&#34;client:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;client&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;import &amp;quot;github.com/goadesign/gorma/example/client&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;type-actioncommand:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;type ActionCommand&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type ActionCommand interface {
    // Run makes the HTTP request and returns the response.
    Run(c *Client) (*http.Response, error)
    // RegisterFlags defines the command flags.
    RegisterFlags(*kingpin.CmdClause)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ActionCommand represents a single action command as defined on the command line.
Each command is associated with a generated client method and contains the logic to
call the method passing in arguments computed from the command line.&lt;/p&gt;

&lt;h2 id=&#34;type-client:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;type Client&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Client struct {
    *goa.Client
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Client is the cellar service client.&lt;/p&gt;

&lt;h3 id=&#34;func-new:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func New&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func New() *Client
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;New instantiates the client.&lt;/p&gt;

&lt;h3 id=&#34;func-client-createaccount:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) CreateAccount&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) CreateAccount(path string, payload *CreateAccountPayload) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create new account&lt;/p&gt;

&lt;h3 id=&#34;func-client-createbottle:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) CreateBottle&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) CreateBottle(path string, payload *CreateBottlePayload) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Record new bottle&lt;/p&gt;

&lt;h3 id=&#34;func-client-deleteaccount:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) DeleteAccount&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) DeleteAccount(path string) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DeleteAccount makes a request to the delete action endpoint of the account resource&lt;/p&gt;

&lt;h3 id=&#34;func-client-deletebottle:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) DeleteBottle&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) DeleteBottle(path string) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DeleteBottle makes a request to the delete action endpoint of the bottle resource&lt;/p&gt;

&lt;h3 id=&#34;func-client-listbottle:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) ListBottle&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) ListBottle(path string, years []int) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List all bottles in account optionally filtering by year&lt;/p&gt;

&lt;h3 id=&#34;func-client-ratebottle:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) RateBottle&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) RateBottle(path string, payload *RateBottlePayload) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RateBottle makes a request to the rate action endpoint of the bottle resource&lt;/p&gt;

&lt;h3 id=&#34;func-client-showaccount:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) ShowAccount&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) ShowAccount(path string) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Retrieve account with given id&lt;/p&gt;

&lt;h3 id=&#34;func-client-showbottle:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) ShowBottle&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) ShowBottle(path string) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Retrieve bottle with given id&lt;/p&gt;

&lt;h3 id=&#34;func-client-updateaccount:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) UpdateAccount&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) UpdateAccount(path string, payload *UpdateAccountPayload) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change account name&lt;/p&gt;

&lt;h3 id=&#34;func-client-updatebottle:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;func (*Client) UpdateBottle&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (c *Client) UpdateBottle(path string, payload *UpdateBottlePayload) (*http.Response, error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UpdateBottle makes a request to the update action endpoint of the bottle resource&lt;/p&gt;

&lt;h2 id=&#34;type-createaccountpayload:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;type CreateAccountPayload&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type CreateAccountPayload struct {
    // Name of account
    Name string
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CreateAccountPayload is the data structure used to initialize the account create request body.&lt;/p&gt;

&lt;h2 id=&#34;type-createbottlepayload:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;type CreateBottlePayload&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type CreateBottlePayload struct {
    Color     string
    Country   *string
    Name      string
    Region    *string
    Review    *string
    Sweetness *int
    Varietal  string
    Vineyard  string
    Vintage   int
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CreateBottlePayload is the data structure used to initialize the bottle create request body.&lt;/p&gt;

&lt;h2 id=&#34;type-ratebottlepayload:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;type RateBottlePayload&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type RateBottlePayload struct {
    // Rating of bottle between 1 and 5
    Rating int
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RateBottlePayload is the data structure used to initialize the bottle rate request body.&lt;/p&gt;

&lt;h2 id=&#34;type-updateaccountpayload:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;type UpdateAccountPayload&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type UpdateAccountPayload struct {
    // Name of account
    Name string
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UpdateAccountPayload is the data structure used to initialize the account update request body.&lt;/p&gt;

&lt;h2 id=&#34;type-updatebottlepayload:4bd4f30263398a45e38fc9edfc648efa&#34;&gt;type UpdateBottlePayload&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type UpdateBottlePayload struct {
    Color     *string
    Country   *string
    Name      *string
    Region    *string
    Review    *string
    Sweetness *int
    Varietal  *string
    Vineyard  *string
    Vintage   *int
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UpdateBottlePayload is the data structure used to initialize the bottle update request body.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Generated by &lt;a href=&#34;http://godoc.org/github.com/davecheney/godoc2md&#34;&gt;godoc2md&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>